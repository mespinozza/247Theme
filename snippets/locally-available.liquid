<div class="locally-available">
  <button id="locallyAvailable">
    <svg width="20" height="20" viewBox="0 0 28 28">
      <circle class="svg__circle" cx="14" cy="14" r="12" fill="none" stroke-width="2"></circle>
      <circle class="svg__circle-inner" cx="14" cy="14" r="5" stroke-width="2"></circle>
    </svg>
    <span>Available locally at {{ location_popup_title }}</span>
  </button>
</div>

<!-- Popup -->
  <div id="locationPopup" class="location-popup">
    <button class="popup-close" onclick="togglePopup()">Ã—</button>
    <div class="popup-inner">
      <h4 class="title">{{ location_popup_title }}</h4>
      <div class="wrapper">
        <div class="popup-location">
          <div id="mapContainer">
            {{ location_popup_map }}
          </div>
        </div>
        <div class="popup-promotion">
          {% if location_popup_promotion %}
            <a class="popup_img" href="{{ location_popup_img_link }}" target="_blank">
              <img src="{{ location_popup_img | img_url: 'master' }}" alt="{{ location_popup_img.alt }}" />
            </a>
            {% else %}
            <a class="popup_phone" href="tel:{{ location_popup_phone }}" target="_blank">
              Call Now
            </a>
          {% endif %}
          <div class="cta">
            <a class="hero__button--primary" href="{{ location_popup_button1_link }}">{{ location_popup_button1_label }}</a>
            <a class="hero__button--secondary" href="{{ location_popup_button2_link }}">{{ location_popup_button2_label }}</a>
          </div>
          
        </div>
      </div>
    </div>
  </div>

{% style %}
.location-popup {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.7);
  z-index: 9999;
  justify-content: center;
  align-items: center;
}

.location-popup.active {
  display: flex;
}

.location-popup .popup-inner {
  background: white;
  padding: 30px;
  width: 90%;
  position: relative;
  border-radius: 8px;
  z-index: 10000;
}

.location-popup .popup-close {
  position: absolute;
  top: 10px;
  right: 15px;
  background: transparent;
      color: #fff;
  border: none;
  font-size: 24px;
  cursor: pointer;
}
.location-popup .wrapper {
    display: flex;
    justify-content: center;
    gap: 68px;
}

.popup-location, .popup-promotion {
    display: flex;
    flex-direction: column;
  width: 100%;
}
.location-popup .title {
    font-size: 22px;
    margin: 0 0 16px 0;
}
.location-popup iframe {
    width: 100%;
    height: 600px;
    border-radius: 20px;
}
  {% if location_popup_promotion == false %}
  .location-popup .wrapper {
      flex-direction: column;
      gap: 25px;
  }
  .location-popup .popup-inner {
    width: 750px;
  }
  .location-popup iframe {
    height: 400px;
}
{% endif %}
.location-popup .cta {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 30px;
    margin-top: 26px;
}
.location-popup  a {
    font-size: 22px;
    padding: 10px 20px;
    border-radius: 50px;
    border: 1px solid;
}
.location-popup .popup_phone {
background: #000;
color: #fff;
  text-decoration: none !important;
  text-align: center;
  width: 300px;
  margin: 0 auto;
}
.location-popup .cta a:first-child {
  background: {{ location_popup_button1_bg_color }};
  color: #fff;
}
.location-popup .cta a:last-child {
  background: {{ location_popup_button2_bg_color }};
  color: #fff;
}
.location-popup .cta a:first-child:hover {
  background: {{ location_popup_button1_bg_hover_color }};
}
.location-popup .cta a:last-child:hover {
  background: {{ location_popup_button2_bg_hover_color }};
}
.location-popup .popup-inner {
  border: 1px solid var(--color-border);
}
.location-popup .popup_img {
    margin: 0 auto;
    border: 0;
  border-radius: 0px;
    max-width: 525px;
}
.location-popup .popup_img img {
    width: 100%;
    border-radius: 20px;
}
.popup-open page-header, .popup-open .wt-announcement, .popup-open header {
    z-index: 0 !important;
}
@media screen and (max-width: 1366px) {
.location-popup iframe {
    height: 500px;
}
  .location-popup .popup-inner {
    max-height: 800px;
    overflow: auto;
}
  .location-popup .title, .location-popup a, .locally-available button {
    font-size: 20px;
  }
  .location-popup .wrapper {
    gap: 38px;
  }
  {% if location_popup_promotion == false %}
  .location-popup .wrapper {
    gap: 20px;
  }
{% endif %}
  .location-popup .cta {gap: 20px;
    margin-top: 10px;
  }
}
  @media screen and (max-width: 1200px) {
.location-popup iframe {
    height: revert-layer;
}
    .location-popup .title, .location-popup a, .locally-available button {
    font-size: 18px;
  }
}
    @media screen and (max-width: 1024px) {
.location-popup iframe {
    height: revert-layer;
}
    .location-popup .title, .location-popup a, .locally-available button {
    font-size: 16px;
  }
        
}
  @media screen and (max-width: 768px) {
  .location-popup .wrapper {
    gap: 28px;
    flex-direction: column;
  }
    {% if location_popup_promotion == false %}
  .location-popup .wrapper {
    gap: 10px;
  }
{% endif %}
    .location-popup iframe {
    height: 300px;
}
    .location-popup .popup-inner {
    max-height: 500px;
    overflow: auto;
}
    .location-popup .title, .location-popup a, .locally-available button {
    font-size: 14px;
  }
    .location-popup .popup_phone {
      width: 100%;
    }
  }
{% endstyle %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const openBtn = document.getElementById('locallyAvailable');
    const popup = document.getElementById('locationPopup');
    const closeBtn = popup.querySelector('.popup-close');
    const body = document.body;
    if (openBtn && popup && closeBtn) {
        openBtn.addEventListener('click', () => {
            popup.classList.add('active');
            body.classList.add('popup-open');  // Add class to body when popup is open
        });

        closeBtn.addEventListener('click', () => {
            popup.classList.remove('active');
            body.classList.remove('popup-open');  // Remove class when popup is closed
        });

        // Optional: click outside to close
        window.addEventListener('click', (e) => {
            if (e.target === popup) {
                popup.classList.remove('active');
                body.classList.remove('popup-open');  // Remove class when clicked outside
            }
        });
    }
    // if (openBtn && popup && closeBtn) {
    //   openBtn.addEventListener('click', () => {
    //     popup.classList.add('active');
    //   });

    //   closeBtn.addEventListener('click', () => {
    //     popup.classList.remove('active');
    //   });

    //   // Optional: click outside to close
    //   window.addEventListener('click', (e) => {
    //     if (e.target === popup) {
    //       popup.classList.remove('active');
    //     }
    //   });
    // }
  });
</script>